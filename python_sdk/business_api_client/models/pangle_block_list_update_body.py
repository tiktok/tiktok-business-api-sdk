# coding: utf-8

"""
 Copyright 2023 TikTok Pte. Ltd.

 This source code is licensed under the MIT license found in
 the LICENSE file in the root directory of this source tree.
"""
import pprint
import re  # noqa: F401

import six

class PangleBlockListUpdateBody(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'add_app_list': 'list[str]',
        'advertiser_id': 'str',
        'clear_old_app': 'bool',
        'delete_app_list': 'list[str]'
    }

    attribute_map = {
        'add_app_list': 'add_app_list',
        'advertiser_id': 'advertiser_id',
        'clear_old_app': 'clear_old_app',
        'delete_app_list': 'delete_app_list'
    }

    def __init__(self, add_app_list=None, advertiser_id=None, clear_old_app=False, delete_app_list=None):  # noqa: E501
        """PangleBlockListUpdateBody - a model defined in Swagger"""  # noqa: E501
        self._add_app_list = None
        self._advertiser_id = None
        self._clear_old_app = None
        self._delete_app_list = None
        self.discriminator = None
        if add_app_list is not None:
            self.add_app_list = add_app_list
        self.advertiser_id = advertiser_id
        if clear_old_app is not None:
            self.clear_old_app = clear_old_app
        if delete_app_list is not None:
            self.delete_app_list = delete_app_list

    @property
    def add_app_list(self):
        """Gets the add_app_list of this PangleBlockListUpdateBody.  # noqa: E501


        :return: The add_app_list of this PangleBlockListUpdateBody.  # noqa: E501
        :rtype: list[str]
        """
        return self._add_app_list

    @add_app_list.setter
    def add_app_list(self, add_app_list):
        """Sets the add_app_list of this PangleBlockListUpdateBody.


        :param add_app_list: The add_app_list of this PangleBlockListUpdateBody.  # noqa: E501
        :type: list[str]
        """

        self._add_app_list = add_app_list

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this PangleBlockListUpdateBody.  # noqa: E501


        :return: The advertiser_id of this PangleBlockListUpdateBody.  # noqa: E501
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this PangleBlockListUpdateBody.


        :param advertiser_id: The advertiser_id of this PangleBlockListUpdateBody.  # noqa: E501
        :type: str
        """
        if advertiser_id is None:
            raise ValueError("Invalid value for `advertiser_id`, must not be `None`")  # noqa: E501

        self._advertiser_id = advertiser_id

    @property
    def clear_old_app(self):
        """Gets the clear_old_app of this PangleBlockListUpdateBody.  # noqa: E501


        :return: The clear_old_app of this PangleBlockListUpdateBody.  # noqa: E501
        :rtype: bool
        """
        return self._clear_old_app

    @clear_old_app.setter
    def clear_old_app(self, clear_old_app):
        """Sets the clear_old_app of this PangleBlockListUpdateBody.


        :param clear_old_app: The clear_old_app of this PangleBlockListUpdateBody.  # noqa: E501
        :type: bool
        """

        self._clear_old_app = clear_old_app

    @property
    def delete_app_list(self):
        """Gets the delete_app_list of this PangleBlockListUpdateBody.  # noqa: E501


        :return: The delete_app_list of this PangleBlockListUpdateBody.  # noqa: E501
        :rtype: list[str]
        """
        return self._delete_app_list

    @delete_app_list.setter
    def delete_app_list(self, delete_app_list):
        """Sets the delete_app_list of this PangleBlockListUpdateBody.


        :param delete_app_list: The delete_app_list of this PangleBlockListUpdateBody.  # noqa: E501
        :type: list[str]
        """

        self._delete_app_list = delete_app_list

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PangleBlockListUpdateBody, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PangleBlockListUpdateBody):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
