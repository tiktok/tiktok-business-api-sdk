# coding: utf-8

"""
 Copyright 2023 TikTok Pte. Ltd.

 This source code is licensed under the MIT license found in
 the LICENSE file in the root directory of this source tree.
"""
import pprint
import re  # noqa: F401

import six

class AppcreateTrackingUrl(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'click_url': 'str',
        'impression_url': 'str',
        'retargeting_click_url': 'str',
        'retargeting_impression_url': 'str'
    }

    attribute_map = {
        'click_url': 'click_url',
        'impression_url': 'impression_url',
        'retargeting_click_url': 'retargeting_click_url',
        'retargeting_impression_url': 'retargeting_impression_url'
    }

    def __init__(self, click_url=None, impression_url=None, retargeting_click_url=None, retargeting_impression_url=None):  # noqa: E501
        """AppcreateTrackingUrl - a model defined in Swagger"""  # noqa: E501
        self._click_url = None
        self._impression_url = None
        self._retargeting_click_url = None
        self._retargeting_impression_url = None
        self.discriminator = None
        if click_url is not None:
            self.click_url = click_url
        if impression_url is not None:
            self.impression_url = impression_url
        if retargeting_click_url is not None:
            self.retargeting_click_url = retargeting_click_url
        if retargeting_impression_url is not None:
            self.retargeting_impression_url = retargeting_impression_url

    @property
    def click_url(self):
        """Gets the click_url of this AppcreateTrackingUrl.  # noqa: E501


        :return: The click_url of this AppcreateTrackingUrl.  # noqa: E501
        :rtype: str
        """
        return self._click_url

    @click_url.setter
    def click_url(self, click_url):
        """Sets the click_url of this AppcreateTrackingUrl.


        :param click_url: The click_url of this AppcreateTrackingUrl.  # noqa: E501
        :type: str
        """

        self._click_url = click_url

    @property
    def impression_url(self):
        """Gets the impression_url of this AppcreateTrackingUrl.  # noqa: E501


        :return: The impression_url of this AppcreateTrackingUrl.  # noqa: E501
        :rtype: str
        """
        return self._impression_url

    @impression_url.setter
    def impression_url(self, impression_url):
        """Sets the impression_url of this AppcreateTrackingUrl.


        :param impression_url: The impression_url of this AppcreateTrackingUrl.  # noqa: E501
        :type: str
        """

        self._impression_url = impression_url

    @property
    def retargeting_click_url(self):
        """Gets the retargeting_click_url of this AppcreateTrackingUrl.  # noqa: E501


        :return: The retargeting_click_url of this AppcreateTrackingUrl.  # noqa: E501
        :rtype: str
        """
        return self._retargeting_click_url

    @retargeting_click_url.setter
    def retargeting_click_url(self, retargeting_click_url):
        """Sets the retargeting_click_url of this AppcreateTrackingUrl.


        :param retargeting_click_url: The retargeting_click_url of this AppcreateTrackingUrl.  # noqa: E501
        :type: str
        """

        self._retargeting_click_url = retargeting_click_url

    @property
    def retargeting_impression_url(self):
        """Gets the retargeting_impression_url of this AppcreateTrackingUrl.  # noqa: E501


        :return: The retargeting_impression_url of this AppcreateTrackingUrl.  # noqa: E501
        :rtype: str
        """
        return self._retargeting_impression_url

    @retargeting_impression_url.setter
    def retargeting_impression_url(self, retargeting_impression_url):
        """Sets the retargeting_impression_url of this AppcreateTrackingUrl.


        :param retargeting_impression_url: The retargeting_impression_url of this AppcreateTrackingUrl.  # noqa: E501
        :type: str
        """

        self._retargeting_impression_url = retargeting_impression_url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AppcreateTrackingUrl, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AppcreateTrackingUrl):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
