# coding: utf-8

"""
 Copyright 2023 TikTok Pte. Ltd.

 This source code is licensed under the MIT license found in
 the LICENSE file in the root directory of this source tree.
"""
import pprint
import re  # noqa: F401

import six

class CreativeportfoliocreatePortfolioContent(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'ad_text': 'str',
        'advanced_audio_info': 'CreativeportfoliocreateAdvancedAudioInfo',
        'advanced_gesture_icon': 'CreativeportfoliocreateAdvancedGestureIcon',
        'advanced_gesture_image': 'CreativeportfoliocreateAdvancedGestureImage',
        'advanced_interact_shape': 'str',
        'advanced_interact_type': 'str',
        'app_id': 'str',
        'asset_content': 'str',
        'asset_ids': 'list[str]',
        'badge_image_info': 'CreativeportfoliocreateBadgeImageInfo',
        'badge_position': 'CreativeportfoliocreateBadgePosition',
        'badge_show_time': 'int',
        'call_to_action': 'str',
        'call_to_action_text': 'str',
        'card_image_index': 'int',
        'card_show_price': 'bool',
        'card_tags': 'list[str]',
        'card_type': 'str',
        'catalog_authorized_bc_id': 'str',
        'catalog_id': 'str',
        'category_label': 'str',
        'country_code': 'list[str]',
        'description': 'str',
        'display_price_enabled': 'bool',
        'dynamic_format': 'str',
        'gesture_type': 'str',
        'identity_authorized_bc_id': 'str',
        'identity_id': 'str',
        'identity_type': 'str',
        'image_id': 'str',
        'image_optimization_enabled': 'bool',
        'interactive_music_id': 'str',
        'item_group_ids': 'list[str]',
        'layouts': 'list[str]',
        'mobile_app_id': 'str',
        'pop_up_window_image_id': 'str',
        'primary_text': 'str',
        'product_set_id': 'str',
        'product_source': 'str',
        'product_specific_type': 'str',
        'profile_image': 'str',
        'secondary_text': 'str',
        'selling_points': 'list[str]',
        'showcase_products': 'list[CreativeportfoliocreateShowcaseProducts]',
        'sku_ids': 'list[str]',
        'slide_dimension': 'CreativeportfoliocreateSlideDimension',
        'slide_length': 'int',
        'sticker_param': 'CreativeportfoliocreateStickerParam',
        'store_authorized_bc_id': 'str',
        'store_id': 'str',
        'tags': 'list[str]',
        'title': 'str',
        'vertical_video_strategy': 'str'
    }

    attribute_map = {
        'ad_text': 'ad_text',
        'advanced_audio_info': 'advanced_audio_info',
        'advanced_gesture_icon': 'advanced_gesture_icon',
        'advanced_gesture_image': 'advanced_gesture_image',
        'advanced_interact_shape': 'advanced_interact_shape',
        'advanced_interact_type': 'advanced_interact_type',
        'app_id': 'app_id',
        'asset_content': 'asset_content',
        'asset_ids': 'asset_ids',
        'badge_image_info': 'badge_image_info',
        'badge_position': 'badge_position',
        'badge_show_time': 'badge_show_time',
        'call_to_action': 'call_to_action',
        'call_to_action_text': 'call_to_action_text',
        'card_image_index': 'card_image_index',
        'card_show_price': 'card_show_price',
        'card_tags': 'card_tags',
        'card_type': 'card_type',
        'catalog_authorized_bc_id': 'catalog_authorized_bc_id',
        'catalog_id': 'catalog_id',
        'category_label': 'category_label',
        'country_code': 'country_code',
        'description': 'description',
        'display_price_enabled': 'display_price_enabled',
        'dynamic_format': 'dynamic_format',
        'gesture_type': 'gesture_type',
        'identity_authorized_bc_id': 'identity_authorized_bc_id',
        'identity_id': 'identity_id',
        'identity_type': 'identity_type',
        'image_id': 'image_id',
        'image_optimization_enabled': 'image_optimization_enabled',
        'interactive_music_id': 'interactive_music_id',
        'item_group_ids': 'item_group_ids',
        'layouts': 'layouts',
        'mobile_app_id': 'mobile_app_id',
        'pop_up_window_image_id': 'pop_up_window_image_id',
        'primary_text': 'primary_text',
        'product_set_id': 'product_set_id',
        'product_source': 'product_source',
        'product_specific_type': 'product_specific_type',
        'profile_image': 'profile_image',
        'secondary_text': 'secondary_text',
        'selling_points': 'selling_points',
        'showcase_products': 'showcase_products',
        'sku_ids': 'sku_ids',
        'slide_dimension': 'slide_dimension',
        'slide_length': 'slide_length',
        'sticker_param': 'sticker_param',
        'store_authorized_bc_id': 'store_authorized_bc_id',
        'store_id': 'store_id',
        'tags': 'tags',
        'title': 'title',
        'vertical_video_strategy': 'vertical_video_strategy'
    }

    def __init__(self, ad_text=None, advanced_audio_info=None, advanced_gesture_icon=None, advanced_gesture_image=None, advanced_interact_shape=None, advanced_interact_type=None, app_id=None, asset_content=None, asset_ids=None, badge_image_info=None, badge_position=None, badge_show_time=None, call_to_action=None, call_to_action_text=None, card_image_index=None, card_show_price=None, card_tags=None, card_type=None, catalog_authorized_bc_id=None, catalog_id=None, category_label=None, country_code=None, description=None, display_price_enabled=None, dynamic_format='UNSET', gesture_type=None, identity_authorized_bc_id=None, identity_id=None, identity_type=None, image_id=None, image_optimization_enabled=None, interactive_music_id=None, item_group_ids=None, layouts=None, mobile_app_id=None, pop_up_window_image_id=None, primary_text=None, product_set_id=None, product_source=None, product_specific_type='UNSET', profile_image=None, secondary_text=None, selling_points=None, showcase_products=None, sku_ids=None, slide_dimension=None, slide_length=None, sticker_param=None, store_authorized_bc_id=None, store_id=None, tags=None, title=None, vertical_video_strategy=None):  # noqa: E501
        """CreativeportfoliocreatePortfolioContent - a model defined in Swagger"""  # noqa: E501
        self._ad_text = None
        self._advanced_audio_info = None
        self._advanced_gesture_icon = None
        self._advanced_gesture_image = None
        self._advanced_interact_shape = None
        self._advanced_interact_type = None
        self._app_id = None
        self._asset_content = None
        self._asset_ids = None
        self._badge_image_info = None
        self._badge_position = None
        self._badge_show_time = None
        self._call_to_action = None
        self._call_to_action_text = None
        self._card_image_index = None
        self._card_show_price = None
        self._card_tags = None
        self._card_type = None
        self._catalog_authorized_bc_id = None
        self._catalog_id = None
        self._category_label = None
        self._country_code = None
        self._description = None
        self._display_price_enabled = None
        self._dynamic_format = None
        self._gesture_type = None
        self._identity_authorized_bc_id = None
        self._identity_id = None
        self._identity_type = None
        self._image_id = None
        self._image_optimization_enabled = None
        self._interactive_music_id = None
        self._item_group_ids = None
        self._layouts = None
        self._mobile_app_id = None
        self._pop_up_window_image_id = None
        self._primary_text = None
        self._product_set_id = None
        self._product_source = None
        self._product_specific_type = None
        self._profile_image = None
        self._secondary_text = None
        self._selling_points = None
        self._showcase_products = None
        self._sku_ids = None
        self._slide_dimension = None
        self._slide_length = None
        self._sticker_param = None
        self._store_authorized_bc_id = None
        self._store_id = None
        self._tags = None
        self._title = None
        self._vertical_video_strategy = None
        self.discriminator = None
        if ad_text is not None:
            self.ad_text = ad_text
        if advanced_audio_info is not None:
            self.advanced_audio_info = advanced_audio_info
        if advanced_gesture_icon is not None:
            self.advanced_gesture_icon = advanced_gesture_icon
        if advanced_gesture_image is not None:
            self.advanced_gesture_image = advanced_gesture_image
        if advanced_interact_shape is not None:
            self.advanced_interact_shape = advanced_interact_shape
        if advanced_interact_type is not None:
            self.advanced_interact_type = advanced_interact_type
        if app_id is not None:
            self.app_id = app_id
        if asset_content is not None:
            self.asset_content = asset_content
        if asset_ids is not None:
            self.asset_ids = asset_ids
        if badge_image_info is not None:
            self.badge_image_info = badge_image_info
        if badge_position is not None:
            self.badge_position = badge_position
        if badge_show_time is not None:
            self.badge_show_time = badge_show_time
        if call_to_action is not None:
            self.call_to_action = call_to_action
        if call_to_action_text is not None:
            self.call_to_action_text = call_to_action_text
        if card_image_index is not None:
            self.card_image_index = card_image_index
        if card_show_price is not None:
            self.card_show_price = card_show_price
        if card_tags is not None:
            self.card_tags = card_tags
        if card_type is not None:
            self.card_type = card_type
        if catalog_authorized_bc_id is not None:
            self.catalog_authorized_bc_id = catalog_authorized_bc_id
        if catalog_id is not None:
            self.catalog_id = catalog_id
        if category_label is not None:
            self.category_label = category_label
        if country_code is not None:
            self.country_code = country_code
        if description is not None:
            self.description = description
        if display_price_enabled is not None:
            self.display_price_enabled = display_price_enabled
        if dynamic_format is not None:
            self.dynamic_format = dynamic_format
        if gesture_type is not None:
            self.gesture_type = gesture_type
        if identity_authorized_bc_id is not None:
            self.identity_authorized_bc_id = identity_authorized_bc_id
        if identity_id is not None:
            self.identity_id = identity_id
        if identity_type is not None:
            self.identity_type = identity_type
        if image_id is not None:
            self.image_id = image_id
        if image_optimization_enabled is not None:
            self.image_optimization_enabled = image_optimization_enabled
        if interactive_music_id is not None:
            self.interactive_music_id = interactive_music_id
        if item_group_ids is not None:
            self.item_group_ids = item_group_ids
        if layouts is not None:
            self.layouts = layouts
        if mobile_app_id is not None:
            self.mobile_app_id = mobile_app_id
        if pop_up_window_image_id is not None:
            self.pop_up_window_image_id = pop_up_window_image_id
        if primary_text is not None:
            self.primary_text = primary_text
        if product_set_id is not None:
            self.product_set_id = product_set_id
        if product_source is not None:
            self.product_source = product_source
        if product_specific_type is not None:
            self.product_specific_type = product_specific_type
        if profile_image is not None:
            self.profile_image = profile_image
        if secondary_text is not None:
            self.secondary_text = secondary_text
        if selling_points is not None:
            self.selling_points = selling_points
        if showcase_products is not None:
            self.showcase_products = showcase_products
        if sku_ids is not None:
            self.sku_ids = sku_ids
        if slide_dimension is not None:
            self.slide_dimension = slide_dimension
        if slide_length is not None:
            self.slide_length = slide_length
        if sticker_param is not None:
            self.sticker_param = sticker_param
        if store_authorized_bc_id is not None:
            self.store_authorized_bc_id = store_authorized_bc_id
        if store_id is not None:
            self.store_id = store_id
        if tags is not None:
            self.tags = tags
        if title is not None:
            self.title = title
        if vertical_video_strategy is not None:
            self.vertical_video_strategy = vertical_video_strategy

    @property
    def ad_text(self):
        """Gets the ad_text of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The ad_text of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._ad_text

    @ad_text.setter
    def ad_text(self, ad_text):
        """Sets the ad_text of this CreativeportfoliocreatePortfolioContent.


        :param ad_text: The ad_text of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._ad_text = ad_text

    @property
    def advanced_audio_info(self):
        """Gets the advanced_audio_info of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The advanced_audio_info of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: CreativeportfoliocreateAdvancedAudioInfo
        """
        return self._advanced_audio_info

    @advanced_audio_info.setter
    def advanced_audio_info(self, advanced_audio_info):
        """Sets the advanced_audio_info of this CreativeportfoliocreatePortfolioContent.


        :param advanced_audio_info: The advanced_audio_info of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: CreativeportfoliocreateAdvancedAudioInfo
        """

        self._advanced_audio_info = advanced_audio_info

    @property
    def advanced_gesture_icon(self):
        """Gets the advanced_gesture_icon of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The advanced_gesture_icon of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: CreativeportfoliocreateAdvancedGestureIcon
        """
        return self._advanced_gesture_icon

    @advanced_gesture_icon.setter
    def advanced_gesture_icon(self, advanced_gesture_icon):
        """Sets the advanced_gesture_icon of this CreativeportfoliocreatePortfolioContent.


        :param advanced_gesture_icon: The advanced_gesture_icon of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: CreativeportfoliocreateAdvancedGestureIcon
        """

        self._advanced_gesture_icon = advanced_gesture_icon

    @property
    def advanced_gesture_image(self):
        """Gets the advanced_gesture_image of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The advanced_gesture_image of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: CreativeportfoliocreateAdvancedGestureImage
        """
        return self._advanced_gesture_image

    @advanced_gesture_image.setter
    def advanced_gesture_image(self, advanced_gesture_image):
        """Sets the advanced_gesture_image of this CreativeportfoliocreatePortfolioContent.


        :param advanced_gesture_image: The advanced_gesture_image of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: CreativeportfoliocreateAdvancedGestureImage
        """

        self._advanced_gesture_image = advanced_gesture_image

    @property
    def advanced_interact_shape(self):
        """Gets the advanced_interact_shape of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The advanced_interact_shape of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._advanced_interact_shape

    @advanced_interact_shape.setter
    def advanced_interact_shape(self, advanced_interact_shape):
        """Sets the advanced_interact_shape of this CreativeportfoliocreatePortfolioContent.


        :param advanced_interact_shape: The advanced_interact_shape of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._advanced_interact_shape = advanced_interact_shape

    @property
    def advanced_interact_type(self):
        """Gets the advanced_interact_type of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The advanced_interact_type of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._advanced_interact_type

    @advanced_interact_type.setter
    def advanced_interact_type(self, advanced_interact_type):
        """Sets the advanced_interact_type of this CreativeportfoliocreatePortfolioContent.


        :param advanced_interact_type: The advanced_interact_type of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._advanced_interact_type = advanced_interact_type

    @property
    def app_id(self):
        """Gets the app_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The app_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this CreativeportfoliocreatePortfolioContent.


        :param app_id: The app_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._app_id = app_id

    @property
    def asset_content(self):
        """Gets the asset_content of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The asset_content of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._asset_content

    @asset_content.setter
    def asset_content(self, asset_content):
        """Sets the asset_content of this CreativeportfoliocreatePortfolioContent.


        :param asset_content: The asset_content of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._asset_content = asset_content

    @property
    def asset_ids(self):
        """Gets the asset_ids of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The asset_ids of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: list[str]
        """
        return self._asset_ids

    @asset_ids.setter
    def asset_ids(self, asset_ids):
        """Sets the asset_ids of this CreativeportfoliocreatePortfolioContent.


        :param asset_ids: The asset_ids of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: list[str]
        """

        self._asset_ids = asset_ids

    @property
    def badge_image_info(self):
        """Gets the badge_image_info of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The badge_image_info of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: CreativeportfoliocreateBadgeImageInfo
        """
        return self._badge_image_info

    @badge_image_info.setter
    def badge_image_info(self, badge_image_info):
        """Sets the badge_image_info of this CreativeportfoliocreatePortfolioContent.


        :param badge_image_info: The badge_image_info of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: CreativeportfoliocreateBadgeImageInfo
        """

        self._badge_image_info = badge_image_info

    @property
    def badge_position(self):
        """Gets the badge_position of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The badge_position of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: CreativeportfoliocreateBadgePosition
        """
        return self._badge_position

    @badge_position.setter
    def badge_position(self, badge_position):
        """Sets the badge_position of this CreativeportfoliocreatePortfolioContent.


        :param badge_position: The badge_position of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: CreativeportfoliocreateBadgePosition
        """

        self._badge_position = badge_position

    @property
    def badge_show_time(self):
        """Gets the badge_show_time of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The badge_show_time of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: int
        """
        return self._badge_show_time

    @badge_show_time.setter
    def badge_show_time(self, badge_show_time):
        """Sets the badge_show_time of this CreativeportfoliocreatePortfolioContent.


        :param badge_show_time: The badge_show_time of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: int
        """

        self._badge_show_time = badge_show_time

    @property
    def call_to_action(self):
        """Gets the call_to_action of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The call_to_action of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._call_to_action

    @call_to_action.setter
    def call_to_action(self, call_to_action):
        """Sets the call_to_action of this CreativeportfoliocreatePortfolioContent.


        :param call_to_action: The call_to_action of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._call_to_action = call_to_action

    @property
    def call_to_action_text(self):
        """Gets the call_to_action_text of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The call_to_action_text of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._call_to_action_text

    @call_to_action_text.setter
    def call_to_action_text(self, call_to_action_text):
        """Sets the call_to_action_text of this CreativeportfoliocreatePortfolioContent.


        :param call_to_action_text: The call_to_action_text of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._call_to_action_text = call_to_action_text

    @property
    def card_image_index(self):
        """Gets the card_image_index of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The card_image_index of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: int
        """
        return self._card_image_index

    @card_image_index.setter
    def card_image_index(self, card_image_index):
        """Sets the card_image_index of this CreativeportfoliocreatePortfolioContent.


        :param card_image_index: The card_image_index of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: int
        """

        self._card_image_index = card_image_index

    @property
    def card_show_price(self):
        """Gets the card_show_price of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The card_show_price of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: bool
        """
        return self._card_show_price

    @card_show_price.setter
    def card_show_price(self, card_show_price):
        """Sets the card_show_price of this CreativeportfoliocreatePortfolioContent.


        :param card_show_price: The card_show_price of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: bool
        """

        self._card_show_price = card_show_price

    @property
    def card_tags(self):
        """Gets the card_tags of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The card_tags of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: list[str]
        """
        return self._card_tags

    @card_tags.setter
    def card_tags(self, card_tags):
        """Sets the card_tags of this CreativeportfoliocreatePortfolioContent.


        :param card_tags: The card_tags of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: list[str]
        """

        self._card_tags = card_tags

    @property
    def card_type(self):
        """Gets the card_type of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The card_type of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._card_type

    @card_type.setter
    def card_type(self, card_type):
        """Sets the card_type of this CreativeportfoliocreatePortfolioContent.


        :param card_type: The card_type of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._card_type = card_type

    @property
    def catalog_authorized_bc_id(self):
        """Gets the catalog_authorized_bc_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The catalog_authorized_bc_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._catalog_authorized_bc_id

    @catalog_authorized_bc_id.setter
    def catalog_authorized_bc_id(self, catalog_authorized_bc_id):
        """Sets the catalog_authorized_bc_id of this CreativeportfoliocreatePortfolioContent.


        :param catalog_authorized_bc_id: The catalog_authorized_bc_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._catalog_authorized_bc_id = catalog_authorized_bc_id

    @property
    def catalog_id(self):
        """Gets the catalog_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The catalog_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._catalog_id

    @catalog_id.setter
    def catalog_id(self, catalog_id):
        """Sets the catalog_id of this CreativeportfoliocreatePortfolioContent.


        :param catalog_id: The catalog_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._catalog_id = catalog_id

    @property
    def category_label(self):
        """Gets the category_label of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The category_label of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._category_label

    @category_label.setter
    def category_label(self, category_label):
        """Sets the category_label of this CreativeportfoliocreatePortfolioContent.


        :param category_label: The category_label of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._category_label = category_label

    @property
    def country_code(self):
        """Gets the country_code of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The country_code of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: list[str]
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this CreativeportfoliocreatePortfolioContent.


        :param country_code: The country_code of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: list[str]
        """

        self._country_code = country_code

    @property
    def description(self):
        """Gets the description of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The description of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreativeportfoliocreatePortfolioContent.


        :param description: The description of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def display_price_enabled(self):
        """Gets the display_price_enabled of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The display_price_enabled of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: bool
        """
        return self._display_price_enabled

    @display_price_enabled.setter
    def display_price_enabled(self, display_price_enabled):
        """Sets the display_price_enabled of this CreativeportfoliocreatePortfolioContent.


        :param display_price_enabled: The display_price_enabled of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: bool
        """

        self._display_price_enabled = display_price_enabled

    @property
    def dynamic_format(self):
        """Gets the dynamic_format of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The dynamic_format of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._dynamic_format

    @dynamic_format.setter
    def dynamic_format(self, dynamic_format):
        """Sets the dynamic_format of this CreativeportfoliocreatePortfolioContent.


        :param dynamic_format: The dynamic_format of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._dynamic_format = dynamic_format

    @property
    def gesture_type(self):
        """Gets the gesture_type of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The gesture_type of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._gesture_type

    @gesture_type.setter
    def gesture_type(self, gesture_type):
        """Sets the gesture_type of this CreativeportfoliocreatePortfolioContent.


        :param gesture_type: The gesture_type of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._gesture_type = gesture_type

    @property
    def identity_authorized_bc_id(self):
        """Gets the identity_authorized_bc_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The identity_authorized_bc_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._identity_authorized_bc_id

    @identity_authorized_bc_id.setter
    def identity_authorized_bc_id(self, identity_authorized_bc_id):
        """Sets the identity_authorized_bc_id of this CreativeportfoliocreatePortfolioContent.


        :param identity_authorized_bc_id: The identity_authorized_bc_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._identity_authorized_bc_id = identity_authorized_bc_id

    @property
    def identity_id(self):
        """Gets the identity_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The identity_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._identity_id

    @identity_id.setter
    def identity_id(self, identity_id):
        """Sets the identity_id of this CreativeportfoliocreatePortfolioContent.


        :param identity_id: The identity_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._identity_id = identity_id

    @property
    def identity_type(self):
        """Gets the identity_type of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The identity_type of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._identity_type

    @identity_type.setter
    def identity_type(self, identity_type):
        """Sets the identity_type of this CreativeportfoliocreatePortfolioContent.


        :param identity_type: The identity_type of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._identity_type = identity_type

    @property
    def image_id(self):
        """Gets the image_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The image_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._image_id

    @image_id.setter
    def image_id(self, image_id):
        """Sets the image_id of this CreativeportfoliocreatePortfolioContent.


        :param image_id: The image_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._image_id = image_id

    @property
    def image_optimization_enabled(self):
        """Gets the image_optimization_enabled of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The image_optimization_enabled of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: bool
        """
        return self._image_optimization_enabled

    @image_optimization_enabled.setter
    def image_optimization_enabled(self, image_optimization_enabled):
        """Sets the image_optimization_enabled of this CreativeportfoliocreatePortfolioContent.


        :param image_optimization_enabled: The image_optimization_enabled of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: bool
        """

        self._image_optimization_enabled = image_optimization_enabled

    @property
    def interactive_music_id(self):
        """Gets the interactive_music_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The interactive_music_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._interactive_music_id

    @interactive_music_id.setter
    def interactive_music_id(self, interactive_music_id):
        """Sets the interactive_music_id of this CreativeportfoliocreatePortfolioContent.


        :param interactive_music_id: The interactive_music_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._interactive_music_id = interactive_music_id

    @property
    def item_group_ids(self):
        """Gets the item_group_ids of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The item_group_ids of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: list[str]
        """
        return self._item_group_ids

    @item_group_ids.setter
    def item_group_ids(self, item_group_ids):
        """Sets the item_group_ids of this CreativeportfoliocreatePortfolioContent.


        :param item_group_ids: The item_group_ids of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: list[str]
        """

        self._item_group_ids = item_group_ids

    @property
    def layouts(self):
        """Gets the layouts of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The layouts of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: list[str]
        """
        return self._layouts

    @layouts.setter
    def layouts(self, layouts):
        """Sets the layouts of this CreativeportfoliocreatePortfolioContent.


        :param layouts: The layouts of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: list[str]
        """

        self._layouts = layouts

    @property
    def mobile_app_id(self):
        """Gets the mobile_app_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The mobile_app_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._mobile_app_id

    @mobile_app_id.setter
    def mobile_app_id(self, mobile_app_id):
        """Sets the mobile_app_id of this CreativeportfoliocreatePortfolioContent.


        :param mobile_app_id: The mobile_app_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._mobile_app_id = mobile_app_id

    @property
    def pop_up_window_image_id(self):
        """Gets the pop_up_window_image_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The pop_up_window_image_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._pop_up_window_image_id

    @pop_up_window_image_id.setter
    def pop_up_window_image_id(self, pop_up_window_image_id):
        """Sets the pop_up_window_image_id of this CreativeportfoliocreatePortfolioContent.


        :param pop_up_window_image_id: The pop_up_window_image_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._pop_up_window_image_id = pop_up_window_image_id

    @property
    def primary_text(self):
        """Gets the primary_text of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The primary_text of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._primary_text

    @primary_text.setter
    def primary_text(self, primary_text):
        """Sets the primary_text of this CreativeportfoliocreatePortfolioContent.


        :param primary_text: The primary_text of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._primary_text = primary_text

    @property
    def product_set_id(self):
        """Gets the product_set_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The product_set_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._product_set_id

    @product_set_id.setter
    def product_set_id(self, product_set_id):
        """Sets the product_set_id of this CreativeportfoliocreatePortfolioContent.


        :param product_set_id: The product_set_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._product_set_id = product_set_id

    @property
    def product_source(self):
        """Gets the product_source of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The product_source of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._product_source

    @product_source.setter
    def product_source(self, product_source):
        """Sets the product_source of this CreativeportfoliocreatePortfolioContent.


        :param product_source: The product_source of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._product_source = product_source

    @property
    def product_specific_type(self):
        """Gets the product_specific_type of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The product_specific_type of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._product_specific_type

    @product_specific_type.setter
    def product_specific_type(self, product_specific_type):
        """Sets the product_specific_type of this CreativeportfoliocreatePortfolioContent.


        :param product_specific_type: The product_specific_type of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._product_specific_type = product_specific_type

    @property
    def profile_image(self):
        """Gets the profile_image of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The profile_image of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._profile_image

    @profile_image.setter
    def profile_image(self, profile_image):
        """Sets the profile_image of this CreativeportfoliocreatePortfolioContent.


        :param profile_image: The profile_image of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._profile_image = profile_image

    @property
    def secondary_text(self):
        """Gets the secondary_text of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The secondary_text of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._secondary_text

    @secondary_text.setter
    def secondary_text(self, secondary_text):
        """Sets the secondary_text of this CreativeportfoliocreatePortfolioContent.


        :param secondary_text: The secondary_text of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._secondary_text = secondary_text

    @property
    def selling_points(self):
        """Gets the selling_points of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The selling_points of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: list[str]
        """
        return self._selling_points

    @selling_points.setter
    def selling_points(self, selling_points):
        """Sets the selling_points of this CreativeportfoliocreatePortfolioContent.


        :param selling_points: The selling_points of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: list[str]
        """

        self._selling_points = selling_points

    @property
    def showcase_products(self):
        """Gets the showcase_products of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The showcase_products of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: list[CreativeportfoliocreateShowcaseProducts]
        """
        return self._showcase_products

    @showcase_products.setter
    def showcase_products(self, showcase_products):
        """Sets the showcase_products of this CreativeportfoliocreatePortfolioContent.


        :param showcase_products: The showcase_products of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: list[CreativeportfoliocreateShowcaseProducts]
        """

        self._showcase_products = showcase_products

    @property
    def sku_ids(self):
        """Gets the sku_ids of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The sku_ids of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: list[str]
        """
        return self._sku_ids

    @sku_ids.setter
    def sku_ids(self, sku_ids):
        """Sets the sku_ids of this CreativeportfoliocreatePortfolioContent.


        :param sku_ids: The sku_ids of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: list[str]
        """

        self._sku_ids = sku_ids

    @property
    def slide_dimension(self):
        """Gets the slide_dimension of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The slide_dimension of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: CreativeportfoliocreateSlideDimension
        """
        return self._slide_dimension

    @slide_dimension.setter
    def slide_dimension(self, slide_dimension):
        """Sets the slide_dimension of this CreativeportfoliocreatePortfolioContent.


        :param slide_dimension: The slide_dimension of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: CreativeportfoliocreateSlideDimension
        """

        self._slide_dimension = slide_dimension

    @property
    def slide_length(self):
        """Gets the slide_length of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The slide_length of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: int
        """
        return self._slide_length

    @slide_length.setter
    def slide_length(self, slide_length):
        """Sets the slide_length of this CreativeportfoliocreatePortfolioContent.


        :param slide_length: The slide_length of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: int
        """

        self._slide_length = slide_length

    @property
    def sticker_param(self):
        """Gets the sticker_param of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The sticker_param of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: CreativeportfoliocreateStickerParam
        """
        return self._sticker_param

    @sticker_param.setter
    def sticker_param(self, sticker_param):
        """Sets the sticker_param of this CreativeportfoliocreatePortfolioContent.


        :param sticker_param: The sticker_param of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: CreativeportfoliocreateStickerParam
        """

        self._sticker_param = sticker_param

    @property
    def store_authorized_bc_id(self):
        """Gets the store_authorized_bc_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The store_authorized_bc_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._store_authorized_bc_id

    @store_authorized_bc_id.setter
    def store_authorized_bc_id(self, store_authorized_bc_id):
        """Sets the store_authorized_bc_id of this CreativeportfoliocreatePortfolioContent.


        :param store_authorized_bc_id: The store_authorized_bc_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._store_authorized_bc_id = store_authorized_bc_id

    @property
    def store_id(self):
        """Gets the store_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The store_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._store_id

    @store_id.setter
    def store_id(self, store_id):
        """Sets the store_id of this CreativeportfoliocreatePortfolioContent.


        :param store_id: The store_id of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._store_id = store_id

    @property
    def tags(self):
        """Gets the tags of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The tags of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: list[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreativeportfoliocreatePortfolioContent.


        :param tags: The tags of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: list[str]
        """

        self._tags = tags

    @property
    def title(self):
        """Gets the title of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The title of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this CreativeportfoliocreatePortfolioContent.


        :param title: The title of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def vertical_video_strategy(self):
        """Gets the vertical_video_strategy of this CreativeportfoliocreatePortfolioContent.  # noqa: E501


        :return: The vertical_video_strategy of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :rtype: str
        """
        return self._vertical_video_strategy

    @vertical_video_strategy.setter
    def vertical_video_strategy(self, vertical_video_strategy):
        """Sets the vertical_video_strategy of this CreativeportfoliocreatePortfolioContent.


        :param vertical_video_strategy: The vertical_video_strategy of this CreativeportfoliocreatePortfolioContent.  # noqa: E501
        :type: str
        """

        self._vertical_video_strategy = vertical_video_strategy

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CreativeportfoliocreatePortfolioContent, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreativeportfoliocreatePortfolioContent):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
