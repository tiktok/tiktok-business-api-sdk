# coding: utf-8

"""
 Copyright 2023 TikTok Pte. Ltd.

 This source code is licensed under the MIT license found in
 the LICENSE file in the root directory of this source tree.
"""
import pprint
import re  # noqa: F401

import six

class OpenApiv13bcadvertisercreateBillingGroupInfo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'billing_group_id': 'str',
        'invoice_group_by': 'str',
        'invoice_payer': 'str'
    }

    attribute_map = {
        'billing_group_id': 'billing_group_id',
        'invoice_group_by': 'invoice_group_by',
        'invoice_payer': 'invoice_payer'
    }

    def __init__(self, billing_group_id=None, invoice_group_by=None, invoice_payer=None):  # noqa: E501
        """OpenApiv13bcadvertisercreateBillingGroupInfo - a model defined in Swagger"""  # noqa: E501
        self._billing_group_id = None
        self._invoice_group_by = None
        self._invoice_payer = None
        self.discriminator = None
        if billing_group_id is not None:
            self.billing_group_id = billing_group_id
        if invoice_group_by is not None:
            self.invoice_group_by = invoice_group_by
        if invoice_payer is not None:
            self.invoice_payer = invoice_payer

    @property
    def billing_group_id(self):
        """Gets the billing_group_id of this OpenApiv13bcadvertisercreateBillingGroupInfo.  # noqa: E501

        Billing group ID. Valid when `invoice_group_by` is `ACCOUNT`  # noqa: E501

        :return: The billing_group_id of this OpenApiv13bcadvertisercreateBillingGroupInfo.  # noqa: E501
        :rtype: str
        """
        return self._billing_group_id

    @billing_group_id.setter
    def billing_group_id(self, billing_group_id):
        """Sets the billing_group_id of this OpenApiv13bcadvertisercreateBillingGroupInfo.

        Billing group ID. Valid when `invoice_group_by` is `ACCOUNT`  # noqa: E501

        :param billing_group_id: The billing_group_id of this OpenApiv13bcadvertisercreateBillingGroupInfo.  # noqa: E501
        :type: str
        """

        self._billing_group_id = billing_group_id

    @property
    def invoice_group_by(self):
        """Gets the invoice_group_by of this OpenApiv13bcadvertisercreateBillingGroupInfo.  # noqa: E501

        Invoicing mode. Enum values: `ACCOUNT`: Invoices in this billing groups are combined. `ADVERTISER`: Invoices in this billing group are handled separately.  # noqa: E501

        :return: The invoice_group_by of this OpenApiv13bcadvertisercreateBillingGroupInfo.  # noqa: E501
        :rtype: str
        """
        return self._invoice_group_by

    @invoice_group_by.setter
    def invoice_group_by(self, invoice_group_by):
        """Sets the invoice_group_by of this OpenApiv13bcadvertisercreateBillingGroupInfo.

        Invoicing mode. Enum values: `ACCOUNT`: Invoices in this billing groups are combined. `ADVERTISER`: Invoices in this billing group are handled separately.  # noqa: E501

        :param invoice_group_by: The invoice_group_by of this OpenApiv13bcadvertisercreateBillingGroupInfo.  # noqa: E501
        :type: str
        """

        self._invoice_group_by = invoice_group_by

    @property
    def invoice_payer(self):
        """Gets the invoice_payer of this OpenApiv13bcadvertisercreateBillingGroupInfo.  # noqa: E501

        Party who pays the invoices. Enum values: `AGENCY`, `ADVERTISER`. This field is required when the registrated area of the ad account is `FR` (France)  # noqa: E501

        :return: The invoice_payer of this OpenApiv13bcadvertisercreateBillingGroupInfo.  # noqa: E501
        :rtype: str
        """
        return self._invoice_payer

    @invoice_payer.setter
    def invoice_payer(self, invoice_payer):
        """Sets the invoice_payer of this OpenApiv13bcadvertisercreateBillingGroupInfo.

        Party who pays the invoices. Enum values: `AGENCY`, `ADVERTISER`. This field is required when the registrated area of the ad account is `FR` (France)  # noqa: E501

        :param invoice_payer: The invoice_payer of this OpenApiv13bcadvertisercreateBillingGroupInfo.  # noqa: E501
        :type: str
        """

        self._invoice_payer = invoice_payer

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(OpenApiv13bcadvertisercreateBillingGroupInfo, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OpenApiv13bcadvertisercreateBillingGroupInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
