# coding: utf-8

"""
 Copyright 2023 TikTok Pte. Ltd.

 This source code is licensed under the MIT license found in
 the LICENSE file in the root directory of this source tree.
"""
import pprint
import re  # noqa: F401

import six

class AdvertiserCreateBody(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'advertiser_info': 'bcadvertisercreateAdvertiserInfo',
        'bc_id': 'str',
        'billing_group_info': 'bcadvertisercreateBillingGroupInfo',
        'billing_info': 'bcadvertisercreateBillingInfo',
        'contact_info': 'bcadvertisercreateContactInfo',
        'customer_info': 'bcadvertisercreateCustomerInfo',
        'qualification_info': 'bcadvertisercreateQualificationInfo',
        'tied_to_billing_group': 'bool'
    }

    attribute_map = {
        'advertiser_info': 'advertiser_info',
        'bc_id': 'bc_id',
        'billing_group_info': 'billing_group_info',
        'billing_info': 'billing_info',
        'contact_info': 'contact_info',
        'customer_info': 'customer_info',
        'qualification_info': 'qualification_info',
        'tied_to_billing_group': 'tied_to_billing_group'
    }

    def __init__(self, advertiser_info=None, bc_id=None, billing_group_info=None, billing_info=None, contact_info=None, customer_info=None, qualification_info=None, tied_to_billing_group=None):  # noqa: E501
        """AdvertiserCreateBody - a model defined in Swagger"""  # noqa: E501
        self._advertiser_info = None
        self._bc_id = None
        self._billing_group_info = None
        self._billing_info = None
        self._contact_info = None
        self._customer_info = None
        self._qualification_info = None
        self._tied_to_billing_group = None
        self.discriminator = None
        self.advertiser_info = advertiser_info
        self.bc_id = bc_id
        if billing_group_info is not None:
            self.billing_group_info = billing_group_info
        if billing_info is not None:
            self.billing_info = billing_info
        if contact_info is not None:
            self.contact_info = contact_info
        self.customer_info = customer_info
        if qualification_info is not None:
            self.qualification_info = qualification_info
        if tied_to_billing_group is not None:
            self.tied_to_billing_group = tied_to_billing_group

    @property
    def advertiser_info(self):
        """Gets the advertiser_info of this AdvertiserCreateBody.  # noqa: E501


        :return: The advertiser_info of this AdvertiserCreateBody.  # noqa: E501
        :rtype: bcadvertisercreateAdvertiserInfo
        """
        return self._advertiser_info

    @advertiser_info.setter
    def advertiser_info(self, advertiser_info):
        """Sets the advertiser_info of this AdvertiserCreateBody.


        :param advertiser_info: The advertiser_info of this AdvertiserCreateBody.  # noqa: E501
        :type: bcadvertisercreateAdvertiserInfo
        """
        if advertiser_info is None:
            raise ValueError("Invalid value for `advertiser_info`, must not be `None`")  # noqa: E501

        self._advertiser_info = advertiser_info

    @property
    def bc_id(self):
        """Gets the bc_id of this AdvertiserCreateBody.  # noqa: E501

        Business Center ID  # noqa: E501

        :return: The bc_id of this AdvertiserCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._bc_id

    @bc_id.setter
    def bc_id(self, bc_id):
        """Sets the bc_id of this AdvertiserCreateBody.

        Business Center ID  # noqa: E501

        :param bc_id: The bc_id of this AdvertiserCreateBody.  # noqa: E501
        :type: str
        """
        if bc_id is None:
            raise ValueError("Invalid value for `bc_id`, must not be `None`")  # noqa: E501

        self._bc_id = bc_id

    @property
    def billing_group_info(self):
        """Gets the billing_group_info of this AdvertiserCreateBody.  # noqa: E501


        :return: The billing_group_info of this AdvertiserCreateBody.  # noqa: E501
        :rtype: bcadvertisercreateBillingGroupInfo
        """
        return self._billing_group_info

    @billing_group_info.setter
    def billing_group_info(self, billing_group_info):
        """Sets the billing_group_info of this AdvertiserCreateBody.


        :param billing_group_info: The billing_group_info of this AdvertiserCreateBody.  # noqa: E501
        :type: bcadvertisercreateBillingGroupInfo
        """

        self._billing_group_info = billing_group_info

    @property
    def billing_info(self):
        """Gets the billing_info of this AdvertiserCreateBody.  # noqa: E501


        :return: The billing_info of this AdvertiserCreateBody.  # noqa: E501
        :rtype: bcadvertisercreateBillingInfo
        """
        return self._billing_info

    @billing_info.setter
    def billing_info(self, billing_info):
        """Sets the billing_info of this AdvertiserCreateBody.


        :param billing_info: The billing_info of this AdvertiserCreateBody.  # noqa: E501
        :type: bcadvertisercreateBillingInfo
        """

        self._billing_info = billing_info

    @property
    def contact_info(self):
        """Gets the contact_info of this AdvertiserCreateBody.  # noqa: E501


        :return: The contact_info of this AdvertiserCreateBody.  # noqa: E501
        :rtype: bcadvertisercreateContactInfo
        """
        return self._contact_info

    @contact_info.setter
    def contact_info(self, contact_info):
        """Sets the contact_info of this AdvertiserCreateBody.


        :param contact_info: The contact_info of this AdvertiserCreateBody.  # noqa: E501
        :type: bcadvertisercreateContactInfo
        """

        self._contact_info = contact_info

    @property
    def customer_info(self):
        """Gets the customer_info of this AdvertiserCreateBody.  # noqa: E501


        :return: The customer_info of this AdvertiserCreateBody.  # noqa: E501
        :rtype: bcadvertisercreateCustomerInfo
        """
        return self._customer_info

    @customer_info.setter
    def customer_info(self, customer_info):
        """Sets the customer_info of this AdvertiserCreateBody.


        :param customer_info: The customer_info of this AdvertiserCreateBody.  # noqa: E501
        :type: bcadvertisercreateCustomerInfo
        """
        if customer_info is None:
            raise ValueError("Invalid value for `customer_info`, must not be `None`")  # noqa: E501

        self._customer_info = customer_info

    @property
    def qualification_info(self):
        """Gets the qualification_info of this AdvertiserCreateBody.  # noqa: E501


        :return: The qualification_info of this AdvertiserCreateBody.  # noqa: E501
        :rtype: bcadvertisercreateQualificationInfo
        """
        return self._qualification_info

    @qualification_info.setter
    def qualification_info(self, qualification_info):
        """Sets the qualification_info of this AdvertiserCreateBody.


        :param qualification_info: The qualification_info of this AdvertiserCreateBody.  # noqa: E501
        :type: bcadvertisercreateQualificationInfo
        """

        self._qualification_info = qualification_info

    @property
    def tied_to_billing_group(self):
        """Gets the tied_to_billing_group of this AdvertiserCreateBody.  # noqa: E501

        Whether to add the ad account to a billing group. Default value: `False`. This field is an allowlist-only feature. If you would like to access it, please contact your TikTok representative  # noqa: E501

        :return: The tied_to_billing_group of this AdvertiserCreateBody.  # noqa: E501
        :rtype: bool
        """
        return self._tied_to_billing_group

    @tied_to_billing_group.setter
    def tied_to_billing_group(self, tied_to_billing_group):
        """Sets the tied_to_billing_group of this AdvertiserCreateBody.

        Whether to add the ad account to a billing group. Default value: `False`. This field is an allowlist-only feature. If you would like to access it, please contact your TikTok representative  # noqa: E501

        :param tied_to_billing_group: The tied_to_billing_group of this AdvertiserCreateBody.  # noqa: E501
        :type: bool
        """

        self._tied_to_billing_group = tied_to_billing_group

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AdvertiserCreateBody, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AdvertiserCreateBody):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
